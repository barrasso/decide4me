{
  "configuration_format_version": 2,

  

  // Dictionary of global configuration parameters.
  // These parameters are not taken from the xcode project,
  // so they need to be supplied by the user.
  "config": {

    // A short name to identify the application.
    // Used to decide the APK filename, but not shown
    // anywhere in the app.
    // "APPLICATION_NAME": "",

    // The name of the application to display in the launcher
    // "APPLICATION_FULL_NAME": "",

    // The unique identifier for the application.
    // Normally this is in reverse DNS notation, e.g.,
    // "com.apportable.Spin"
    // "APPLICATION_IDENTIFIER": "",

    // Short version name for the app, e.g., "1.0"
    // "SHORT_VERSION": "",

    // A list of features needed on the target platform.
    // Common features include:
    //   "accelerometer"
    //   "access_network_state"
    //   "access_wifi_state"
    //   "atc_slow_surface"
    //   "billing"
    //   "c2dm_receive"
    //   "check_license"
    //   "get_accounts"
    //   "large_heap"
    //   "large_heap"
    //   "live_wallpaper"
    //   "multitouch"
    //   "multitouch_distinct"
    //   "multitouch_jazzhand"
    //   "NFC"
    //   "no_internet"
    //   "notifications"
    //   "opengles2"
    //   "portrait"
    //   "prefer_external_storage"
    //   "read_phone_state"
    //   "stencil_buffer"
    //   "touch_filter_move"
    //   "touchscreen"
    //   "true_color"
    //   "vibrate"
    //   "wake_lock"
    //   "write_external_storage"
    //   "write_settings"
    //   "xperia"
    //"FEATURES": []

    // Preferred way of handling URLs in the code.
    // Leave it null for most cases.
    //"URL_SCHEME": null,

    // Key to receive remote notifications on the device.
    //"REMOTE_NOTIFICATION_KEY": "",

    // The method for adjusting the splash screen (Default.png)
    // to fit the native device resolution.  Options are:
    //   "aspect_fill"
    //   "aspect_fit"
    //   "letterbox" (the default)
    //   "native"
    //   "stretch"
    //"SPLASH_SCREEN_TYPE": "letterbox",

    // Path to the image to use for the app's icon.
    // Usually something like "./Icon.png".
    // "ICON": "",

    // A regular expression to determine which assets
    // should be compressed when building the final app.
    // By default, text assets are not compressed.  Use
    // this to compress certain text assets.  For example,
    // ".*.plist$" will cause all files ending in ".plist"
    // to be compressed.
    //"COMPRESSED_ASSETS_PATTERN": "",
    //"UNCOMPRESSED_ASSETS_PATTERN": "",

    // Automatically convert audio to oggs. Defaults to true. 
    // Can be configured per file with add params and "convert" 
    // field or with the "CONVERTABLE_AUDIO_EXTENSIONS" flag.
    //"CONVERT_AUDIO": false,

    // Comma-separated list of file extensions that are safe to convert to OGGs
    //"CONVERTABLE_AUDIO_EXTENSIONS": ".mp3,.wav,.caf,.m4a",
    
    // Compress PNGs with pngcrush. Defaults to true.
    //"COMPRESS_PNGS": false,

    // This will cache all converted assets (pngs, oggs, etc) 
    // into the approj directory.  This is useful if you want to 
    // persist the changes across builds or check them in source
    // control so they are uses by Linux based builders. Note that
    // if you disable this, your final build params file will contain 
    // absolute paths and should not be checked in.
    // Defaults to true.  
    //"STORE_ASSESTS_IN_APPROJ": false,

    //Manifest extras
    //A list of .xml files that contain snippets to be included in AndroidManifest.xml
    //inside the <manifest>, <activity> and <application> tags respectively.
    //"MANIFEST_EXTRAS": [],
    //"ACTIVITY_MANIFEST_EXTRAS": [],
    //"APPLICATION_MANIFEST_EXTRAS": [],

    // Advanced Options
    //"NOTIFICATION_ICON":"",
    //"TEMPLATE_VALUES":{},
    //"OGGENC_OPTIONS":"",
    //"AFCONVERT_OPTIONS":"",
    //"PNGCRUSH_OPTIONS":"",
    //"MIN_SDK": 8,
    //"C2DM_SENDER": "",
    //"HARDWARE_ACCELERATED": "",
    //"NFC_SCHEME": "",
    //"MPMETRICS_API_KEY": "",
    //"RENAME_TARGET": true,

  },

  // Sometimes header include path ordering matters.  If so, put the ordering constraints into this
  // array.  For example, if "./foo" has to come before "./bar", you would put:
  // ["./foo", "./bar"]
  // Note that "./some_other_include_path" doesn't appear in the list, since its order doesn't matter.
  // You can also specify "*", which matches everything not already constrained.  This lets you put
  // particular paths at the beginning or end of the list.  For example, ["./foo", "*", "./bar"].
  "header_ordering_constraints": [],

  // Edit this section to add and replace files and parameters to the generated settings for this project.
  // If the generated settings for a particular file are incorrect, simply add it here with the settings
  // you need and the final build parameters will only included the version specified here.
  "add_params": {
    // A list of pch files to -include.
    // PCH files can be either a string, e.g., "./MyApp-Prefix.pch",
    // or a dictionary specifying the pch and the environment where
    // it should be used, e.g.,
    // {"pch": "./prefix-android.pch", "env": {"TARGET_OS": "android"}}
    "pchs": [],
    
    // A list of header search paths
    // e.g. "./External/facebook-sdk/include"
    //"header_paths": [],
    
    "header_paths": ["external/kazmath/include", "external/Box2d", "external/Chipmunk/objectivec/include", "external/Chipmunk/include/chipmunk/"],
    // A list of global compile flags for the project.
    // Flags can be either a string, e.g. "-Werror-shadow",
    // or a dictionary specifying the flag and the environment
    // that it should be used in, e.g.,
    // {"flag": "-fstack-protector", "env": {"TARGET_OS": "android"}}
    "flags": [],
    
    // A dictionary of global compiler definitions for the project.
    // Defines can be a simple key-value pair, e.g., "DEBUG": 1,
    // or the value can be a dictionary specifying the value and the
    // environment that it should be used in, e.g.,
    // "SOME_DEFINE": {"value": "\"yep its building on android\"", "env": {"TARGET_OS": "android"}}
    "defines": {},
   
    // A list of dependencies.  Typically these correspond to
    // frameworks in the xcode project.
    //"deps": [],
    "deps": ["AVFoundation"],
        
    // A list of source files (e.g. .m, .mm, .c, .cc, and .cpp) files to build.
    // Source files can be a string, e.g. "./main.c", or a dictionary specifying
    // the file, any special flags, any defines, and the environment
    // where it should be compiled, e.g.,
    // {"source": "./PngImageLoader.m", "flags": ["-fstack-protector"], "defines": {"PNG": 1}, "env": {"TARGET_TEXTURE_FMT": "png"}}
    "sources": [],
    
    // A list of glob inclusion filters for additional files.
    // This can also be used to replace flags on multiple files.
    // e.g. {"source":"./Server/Level_[0-9].m","flags": ["-fno-objc-arc"],  "defines": {"NDEBUG": 1}}
    "sources_glob":[],
    
    // A list of assets to package with the application.
    // Assets can be either a string, e.g., "./Info.plist",
    // or a dictionary specifying the asset and the target path it should be written to
    // in the app, and the environment it should be included with, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target": "Bundled Resources/", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    // or a dictionary like above, but instead specifying the full target file name
    // for the asset, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target": "Bundled Resources/cube_texture.pvr.gz", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    "assets": [],

    // A list of Info.plist files.  The first one in the list will be the one we consider the main Info.plist.
    "infoplists": [],

    //A list of specific java sources file to compile
    "java_sources": [],

    //A list of the java root source directories
    "java_sourcepaths": [],

    //A list of java Librarys (jars)
    "java_libs": [],

    //A list of java resource directories
    "java_res_dirs": [],

    //A list of libs to include with the APK
    "libs":[],

    //Additional linker (ld) flags.
    "link_flags":[],

    //Sub projects
    "modules": [],
  },

  // Edit this section to remove files and parameters from the generated #{$build_params_file} for this project.
  // For this section, only specify the file name as a string in the cases where you could normally
  // also specify an array or a dictionary.  To override the generated settings for a particular
  // file, simply add it to the "add_params" list above with the settings you want.
  "remove_params": {
    // A list of pch files to remove from -include.
    // PCH files can be either a string, e.g., "./MyApp-Prefix.pch",
    // or a dictionary specifying the pch and the environment where
    // it should be used, e.g.,
    // {"pch": "./prefix-android.pch", "env": {"TARGET_OS": "android"}}
    "pchs": [],
    
    // A list of header search paths.
    // e.g. "./External/facebook-sdk/include"
    "header_paths": [],
    
    // A list of global compile flags for the project.
    // Flags can be either a string, e.g. "-Werror-shadow",
    // or a dictionary specifying the flag and the environment
    // that it should be used in, e.g.,
    // {"flag": "-fstack-protector", "env": {"TARGET_OS": "android"}}
    "flags": [],
    
    // A dictionary of global compiler definitions for the project.
    // Defines can be a simple key-value pair, e.g., "DEBUG": 1,
    // or the value can be a dictionary specifying the value and the
    // environment that it should be used in, e.g.,
    // "SOME_DEFINE": {"value": "\"yep its building on android\"", "env": {"TARGET_OS": "android"}}
    "defines": {},
   
    // A list of dependencies.  Typically these correspond to
    // frameworks in the xcode project.
    "deps": [],
    
    // A list of source files (e.g. .m, .mm, .c, .cc, and .cpp) files to remove from the build.
    // e.g. "./External/Reachabilty/Reachability.m"
    "sources": [],
    
    // A list of glob removal filters to filter out source files.
    // e.g. "./Server/Level_[0-9].m"
    "sources_glob":[],
    
    // A list of assets to package with the application.
    // Assets can be either a string, e.g., "./Info.plist",
    // a dictionary specifying the asset, the target path it should be written to
    // in the app, and the environment it should be included with, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_path": "Bundled Resources/", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    // or a dictionary like above, but instead specifying the full target file name
    // for the asset, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_file": "Bundled Resources/cube_texture.pvr.gz", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    "assets": [],
    
    // A list of Info.plist files.  The first one in the list will be the one we consider the main Info.plist.
    "infoplists": [],

    //A list of specific java sources file to compile
    "java_sources": [],

    //A list of the java root source directories
    "java_sourcepaths": [],

    //A list of java Librarys (jars)
    "java_libs": [],

    //A list of java resource directories
    "java_res_dirs": [],

    //A list of libs to include with the APK
    "libs":[],

    //Additional linker (ld) flags.
    "link_flags":[],

    //Sub projects
    "modules": [],
  }
}
